// ล้างหน้าแสดงคำสั่ง (console) และล้างค่าในทุกตัวแปร
clc; clear all; 
// simple random search
// สร้างฟังก์ชัน makespan (กำหนด x1= A, x2 = X)
function [MSX] = makespan(A, X)
    //กำหนดขนาดของ X
    [mP nP] =  size(X);
    // สร้างเมทริกว่างสำหรับเก็บของ function
    MSX = []
    // สร้างรูปการทำงาน ค่า ip เริ่มต้นที่ 1 เพิ่มค่าขึ้นครั้งละ 1 ให้ครบจำนวนรอบตามค่า mP 
    for ip = 1:mP
        // ตัวแปร P ให้เก็บขนาดของ x2 = X เริ่มต้นที่ ip จนถึงตัวสุดท้าย
        P=X(ip,:);
        // กำหนดขนาดของ A
        [mA nA]  = size(A);
        //สร้างอาร์เรย์ของ mA และ nA เก็บไว้ในตัวแปร tm
        tm=zeros(mA, nA);
        // ค่า j เริ่มต้นที่ 1 เพิ่มค่าขึ้นครั้งละ 1 จนถึงจำนวนรอบค่า nA
        for j = 1:nA
            // ค่า i เริ่มต้นที่ 1 เพิ่มค่าขึ้นครั้งละ 1 จนถึงจำนวนรอบค่า mA
            for i = 1:mA
                // ถ้า i มีค่าเท่ากับ ให้คำตามคำสั่งบรรทัดต่อไป หลัง then
                if (i==1) then
                    /* 
                    ถ้า j มีค่าเท่ากับ 1 ให้คำตามคำสั่งบรรทัดต่อไป หลัง then
                    // ตรวจสอบว่าถ้าเครื่องจักรที่ตัวแรก ทำงานเสร็จแล้วให้ 
                    กระจายงานไปเครื่องจักรที่สอง และเครื่องจักรที่สาม ตามลำดับ
                    */
                    // ถ้า j เท่ากับ 1 ให้ทำ ... 
                    if (j==1) then 
                        // กำหนดค่าตัวแปร นำค่าไปเก็บที่ job 1, อาร์เรย์ ลำดับที่สอง ( j = [j0, j1, ... JN] )
                        tm(i,j)=tm(i,j) + A(i,P(j));
                        // ทำงานเสร็จ นำข้อมูลมาเก็บที่ T 
                        T(i,j)=tm(i,j);
                     // ถ้า j ไม่เท่ากับ 1 ให้ทำ ...
                    else 
                         // กำหนดค่าตัวแปร นำค่าไปเก็บที่ job 0, อาร์เรย์ ลำดับที่หนึ่ง ( j = [j0, j1, ... JN] )
                        tm(i,j)=tm(i,j-1) + A(i,P(j)); 
                        // ทำงานเสร็จ นำข้อมูลมาเก็บที่ T 
                        T(i,j)=tm(i,j);
                    end
                else
                    // ถ้า j เท่ากับ 1 ให้ทำ ... 
                    if (j==1) then 
                        // กำหนดค่าตัวแปร นำค่าไปเก็บรอบก่อนหน้า (รอบแรก)
                        tm (i,j)=tm(i-1,j) + A(i,P(j));
                        // ทำงานเสร็จ นำข้อมูลมาเก็บที่ T 
                        T(i,j)=tm(i,j);
                     // ถ้า j ไม่เท่ากับ 1 ให้ทำ ... 
                    else 
                        // กำหนดค่าตัวแปร นำค่าไปเก็บรอบก่อนหน้า (รอบแรก) , อาร์เรย์ ลำดับที่ 0 ( j = [j0, j1, ... JN] )
                        tm(i,j)=max(tm(i-1,j),tm(i,j-1)) + A(i,P(j));
                        // ทำงานเสร็จ นำข้อมูลมาเก็บที่ T 
                        T(i,j)=tm(i,j);
    end
end
end
end
// กำหนดข้อมูล T (i ตัวสุดท้้าย, j ตัวสุดท้าย)
makes=T($,$);
// นำค่าสองเมทริกส์มารวมกัน
MSX=[MSX;makes];
end
endfunction

A = [34 20 57 47 62 40 74 94  9 62 86 13 78 46 83 52 13 70 40 60;
  5 48 80 43 34  2 87 68 28 84 30 35 42 39 85 34 36  9 96 84;
 86 35  5 93 74 12 40 95 80  6 92 14 83 49 36 38 43 89 94 33;
 28 39 55 21 25 88 59 40 90 18 33 10 59 92 15 77 31 85 85 99;
  8 91 45 55 75 18 59 86 45 89 11 54 38 41 64 98 83 36 61 19];
// work 15-8-2022
// อาจารย์ให้ปรับปรุงวิธีการคำนวณ 43-53 และแก้ไขในใบงานที่ 4 ส่งอีกรอบ
for i = 1:1000000
X = grand(5 ,'prm',[1:20]) // สุ่มแบบเรียงสับเปลี่ยน
[MSX]=makespan(A, X)
MSX_X = [MSX X ];
// 'r' คือแถวของแต่ละคอลัมน์ MSX_X จะถูกจัดเรียง
sort_MSX_X = gsort(MSX_X,'lr','d')
if (MSX_X($,:)) < 1330 then
disp(MSX_X($,:))
end
end


/*
// What's number min of makespan?, what is number they? 
// goal point = 1206;
// min of number: (15-8-2022) = 1269

//sort_MSX_X = gsort(MSX_X,'lr','d')
   column 1 to 10
   1269.   2.   16.   9.   3.   5.   17.   1.   6.   19.
         column 11 to 19
   7.   10.   12.   18.   4.   14.   8.   15.   20.
         column 20 to 21
   13.   11
   
/*
